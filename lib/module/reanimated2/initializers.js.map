{"version":3,"names":["reportFatalErrorOnJS","isChromeDebugger","isJest","shouldBeUseWeb","runOnJS","setupMicrotasks","callMicrotasks","runOnUIImmediately","mockedRequestAnimationFrame","setupClasses","IS_JEST","SHOULD_BE_USE_WEB","IS_CHROME_DEBUGGER","callGuardDEV","fn","args","e","global","__ErrorUtils","reportFatalError","setupCallGuard","__callGuardDEV","error","message","stack","capturableConsole","console","setupConsole","assert","debug","log","warn","info","setupRequestAnimationFrame","nativeRequestAnimationFrame","requestAnimationFrame","animationFrameCallbacks","lastNativeAnimationFrameTimestamp","__flushAnimationFrame","frameTimestamp","fromNative","currentCallbacks","forEach","f","callback","push","length","timestamp","__frameTimestamp","undefined","initializeUIRuntime","globalThis"],"sources":["initializers.ts"],"sourcesContent":["'use strict';\nimport { reportFatalErrorOnJS } from './errors';\nimport { isChromeDebugger, isJest, shouldBeUseWeb } from './PlatformChecker';\nimport {\n  runOnJS,\n  setupMicrotasks,\n  callMicrotasks,\n  runOnUIImmediately,\n} from './threads';\nimport { mockedRequestAnimationFrame } from './mockedRequestAnimationFrame';\n// @ts-ignore js file\nimport { setupClasses } from './setupClasses';\n\nconst IS_JEST = isJest();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\nconst IS_CHROME_DEBUGGER = isChromeDebugger();\n\n// callGuard is only used with debug builds\nexport function callGuardDEV<Args extends unknown[], ReturnValue>(\n  fn: (...args: Args) => ReturnValue,\n  ...args: Args\n): ReturnValue | void {\n  'worklet';\n  try {\n    return fn(...args);\n  } catch (e) {\n    if (global.__ErrorUtils) {\n      global.__ErrorUtils.reportFatalError(e as Error);\n    } else {\n      throw e;\n    }\n  }\n}\n\nexport function setupCallGuard() {\n  'worklet';\n  global.__callGuardDEV = callGuardDEV;\n  global.__ErrorUtils = {\n    reportFatalError: (error: Error) => {\n      runOnJS(reportFatalErrorOnJS)({\n        message: error.message,\n        stack: error.stack,\n      });\n    },\n  };\n}\n\n// We really have to create a copy of console here. Function runOnJS we use on elements inside\n// this object makes it not configurable\nconst capturableConsole = { ...console };\n\nexport function setupConsole() {\n  'worklet';\n  if (!IS_CHROME_DEBUGGER) {\n    // @ts-ignore TypeScript doesn't like that there are missing methods in console object, but we don't provide all the methods for the UI runtime console version\n    global.console = {\n      /* eslint-disable @typescript-eslint/unbound-method */\n      assert: runOnJS(capturableConsole.assert),\n      debug: runOnJS(capturableConsole.debug),\n      log: runOnJS(capturableConsole.log),\n      warn: runOnJS(capturableConsole.warn),\n      error: runOnJS(capturableConsole.error),\n      info: runOnJS(capturableConsole.info),\n      /* eslint-enable @typescript-eslint/unbound-method */\n    };\n  }\n}\n\nfunction setupRequestAnimationFrame() {\n  'worklet';\n\n  // Jest mocks requestAnimationFrame API and it does not like if that mock gets overridden\n  // so we avoid doing requestAnimationFrame batching in Jest environment.\n  const nativeRequestAnimationFrame = global.requestAnimationFrame;\n\n  let animationFrameCallbacks: Array<\n    (timestamp: number, fromNative?: boolean) => void\n  > = [];\n  let lastNativeAnimationFrameTimestamp = -1;\n\n  global.__flushAnimationFrame = (\n    frameTimestamp: number,\n    fromNative?: boolean\n  ) => {\n    const currentCallbacks = animationFrameCallbacks;\n    animationFrameCallbacks = [];\n    currentCallbacks.forEach((f) => f(frameTimestamp, fromNative));\n    callMicrotasks();\n  };\n\n  global.requestAnimationFrame = (\n    callback: (timestamp: number) => void\n  ): number => {\n    animationFrameCallbacks.push(callback);\n    if (animationFrameCallbacks.length === 1) {\n      // We schedule native requestAnimationFrame only when the first callback\n      // is added and then use it to execute all the enqueued callbacks. Once\n      // the callbacks are run, we clear the array.\n      nativeRequestAnimationFrame((timestamp) => {\n        if (lastNativeAnimationFrameTimestamp >= timestamp) {\n          // Make sure we only execute the callbacks once for a given frame\n          return;\n        }\n        lastNativeAnimationFrameTimestamp = timestamp;\n        global.__frameTimestamp = timestamp;\n        global.__flushAnimationFrame(timestamp, true);\n        global.__frameTimestamp = undefined;\n      });\n    }\n    // Reanimated currently does not support cancelling callbacks requested with\n    // requestAnimationFrame. We return -1 as identifier which isn't in line\n    // with the spec but it should give users better clue in case they actually\n    // attempt to store the value returned from rAF and use it for cancelling.\n    return -1;\n  };\n}\n\nexport function initializeUIRuntime() {\n  if (IS_JEST) {\n    // requestAnimationFrame react-native jest's setup is incorrect as it polyfills\n    // the method directly using setTimeout, therefore the callback doesn't get the\n    // expected timestamp as the only argument: https://github.com/facebook/react-native/blob/main/packages/react-native/jest/setup.js#L28\n    // We override this setup here to make sure that callbacks get the proper timestamps\n    // when executed. For non-jest environments we define requestAnimationFrame in setupRequestAnimationFrame\n    // @ts-ignore TypeScript uses Node definition for rAF, setTimeout, etc which returns a Timeout object rather than a number\n    globalThis.requestAnimationFrame = mockedRequestAnimationFrame;\n  }\n\n  runOnUIImmediately(() => {\n    'worklet';\n    setupClasses();\n    setupCallGuard();\n    setupConsole();\n    if (!SHOULD_BE_USE_WEB) {\n      setupMicrotasks();\n      setupRequestAnimationFrame();\n    }\n  })();\n}\n"],"mappings":"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","ignoreList":[]}